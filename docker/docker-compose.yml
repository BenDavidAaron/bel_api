# docker-compose build && docker-compose up -d
version: "3.2"

volumes:
  bel_arango_data:
    driver: local
  bel_elasticsearch_data:
    driver: local
  bel_kibana_data:
    driver: local
  bel_redis_data:
    driver: local

services:

  # Reverse proxy for BEL API and other web endpoints
  # http://localhost:8088
  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8088:8088"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf-traefik-dev.toml:/traefik.toml
      - ./traefik.acme.json:/acme.json
    # network_mode: "host"


  # BEL API - core requirement
  bel_api:
    container_name: bel_api
    image: belbio/bel_api:latest
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-bel_api
    ports:
      - "8010:8000"
    depends_on:
      - bel_elasticsearch
      - bel_arangodb
      - bel_redis
    volumes:
      - ../api:/app
      - ./belbio_conf_local_docker_image.yml:/app/belbio_conf.yml
      - ./belbio_secrets.yml:/app/belbio_secrets.yml
    labels:
      - traefik.enable=true
      - traefik.backend=bel_api
      - traefik.frontend.rule=Host:belapi.test;PathPrefixStrip:/v1
      - traefik.port=8000
    environment:
      - SERVER_MODE=DEV
    restart: unless-stopped


#  ArangoDB and ElasticSearch are setup on api.openbel.org
#    since they take up a lot of resources when loaded with
#    terminologies, orthologies and edges
#
#  Use ssh tunneling to make them available for local development

# Host belapi-tunnel belauth-tunnel belmgr-tunnel
#   Hostname api.openbel.org
#   User ubuntu
#   LocalForward 9200 127.0.0.1:9200
#   LocalForward 8529 127.0.0.1:8529
#   IdentityFile ~/.ssh/ads-pmi-admin1.pem


  # ArangoDB - document/graph store - core requirement
  # http://localhost:8529
  bel_arangodb:
    container_name: bel_arangodb
    image: arangodb:3.3.4
    ports:
      - "8529:8529"
    volumes:
      - bel_arango_data:/var/lib/arangodb3
    labels:
      - traefik.enable=true
      - traefik.backend=bel_arangodb
      - traefik.frontend.rule=Host:arangodb.belapi.test
      - traefik.port=8529
    environment:
      - ARANGO_NO_AUTH=1
    healthcheck:
         test: curl -f my-system:8529/_api/version || exit 1
    restart: unless-stopped

  # Elasticsearch - terminology search - core requirement
  # http://localhost:9200
  bel_elasticsearch:
    container_name: bel_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.2
    ports:
      - "9200:9200"
    volumes:
      - bel_elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/conf/elasticsearch.yml
    # logging:
    #   driver: none
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1g
    restart: unless-stopped


  # Optional for viewing Elasticsearch terminology search service
  # http://localhost:5601
  bel_kibana:
    container_name: bel_kibana
    image: docker.elastic.co/kibana/kibana:6.1.2
    ports:
      - 5601:5601
    volumes:
      - bel_kibana_data:/usr/share/kibana/data
    labels:
      - traefik.enable=true
      - traefik.backend=kibana
      - traefik.frontend.rule=Host:kibana.belapi.test
      - traefik.port=5601
    depends_on:
      - bel_elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://bel_elasticsearch:9200
      - xpack.security.enabled=false
    # logging:
    #   driver: none
    restart: unless-stopped

  bel_redis:
    container_name: bel_redis
    image: redis:alpine
    ports: ["6379:6379"]
    volumes:
      - bel_redis_data:/data
    restart: unless-stopped

  bel_rq_dashboard:
    container_name: bel_rq_dashboard
    image: rq_dashboard
    build:
      context: .
      dockerfile: Dockerfile-rq_dashboard
    depends_on: [bel_redis]
    ports: ["9181:9181"]
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://bel_redis
    restart: unless-stopped

  bel_rq_worker:
    container_name: bel_rq_worker
    image: belbio/bel_api:latest

    # build:
    #   context: ..
    #   dockerfile: ./docker/Dockerfile-bel_api

    entrypoint:
      - rq
      - worker
    depends_on:
      - bel_elasticsearch
      - bel_arangodb
      - bel_redis
    volumes:
      - ../api:/app
      - ./belbio_conf_local_docker_image.yml:/app/belbio_conf.yml
      - ./belbio_secrets.yml:/app/belbio_secrets.yml
    labels:
      - traefik.enable=true
      - traefik.backend=bel_api
      - traefik.frontend.rule=Host:belapi.test;PathPrefixStrip:/v1
      - traefik.port=8000
    environment:
      - SERVER_MODE=DEV
    restart: unless-stopped

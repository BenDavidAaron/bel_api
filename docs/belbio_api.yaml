openapi: 3.0.0

servers:
- name: Production server V1
  url: https://api.bel.bio/v1

info:
  title: BELBio REST API
  description: |
    BEL Bio REST API description

    Security - this API can be secured via JSON Web Token passed
    in the Authorization header, but it is currently disabled. Since
    only GETs are allowed at this point, it does not appear necessary
    to restrict access.

    The terminology services and some utility API endpoints have been
    created at this point.  The BEL, Nanopubs and Edges endpoints
    are to be implemented in the future.

    **Note the Endpoints in the TODO section are only documented and
    not yet implemented**

  version: v0.1.0
  contact:
    name: whayes@adsworks.com
    url: https://bel.bio

security:
- JwtApiKey: []

tags:
- name: BEL
  description: BEL Language endpoints
- name: Terminologies
  description: Namespace and Annotation terminology endpoints
- name: Nanopubs
  description: Nanopub endpoints
- name: Edges
  description: Edge endpoints
- name: Utility
  description: Utility endpoints
- name: TODO
  description: These endpoints not implemented, only documented

paths:

  /bel/{subject}/{relation}/{object}/validate:
    get:
      summary: Validate
      description: Validate BEL
      tags:
      - TODO
      operationId: getBelValidate
      parameters:
      - name: subject
        in: path
        required: true
        description: BEL Subject
        schema:
          type: string
      - name: relation
        in: path
        required: true
        description: BEL Relationship
        schema:
          type: string
      - name: object
        in: path
        required: true
        description: BEL Object
        schema:
          type: string
      - name: ast
        in: query
        required: false
        description: |
          If AST is requested, the abstract syntax tree of the
          BEL Edges will be provided in the response.
        schema:
          type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  bel:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  ast:
                    type: object
                    description: |
                      If AST is requested (by query param), provide
                      the AST along with the Edge subject, relation, and
                      objects.
                    additionalProperties:
                      type: object
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /bel/{subject}/{relation}/{object}/canonicalize:
    get:
      summary: Canonicalize BEL
      description: Canonicalize BEL
      tags:
      - TODO
      operationId: getBelCanonicalize
      parameters:
      - name: subject
        in: path
        required: true
        description: BEL Subject
        schema:
          type: string
      - name: relation
        in: path
        required: true
        description: BEL Relationship
        schema:
          type: string
      - name: object
        in: path
        required: true
        description: BEL Object
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  canonicalized:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /bel/{subject}/{relation}/{object}/decanonicalize:
    get:
      summary: Decanonicalize BEL
      description: Decanonicalize BEL
      tags:
      - TODO
      operationId: getBelDecanonicalize
      parameters:
      - name: subject
        in: path
        required: true
        description: BEL Subject
        schema:
          type: string
      - name: relation
        in: path
        required: true
        description: BEL Relationship
        schema:
          type: string
      - name: object
        in: path
        required: true
        description: BEL Object
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  decanonicalized:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /bel/{subject}/{relation}/{object}/orthologize/{species_id}:
    get:
      summary: Orthologize BEL
      description: Orthologize BEL
      tags:
      - TODO
      operationId: getBelOrthologize
      parameters:
      - name: subject
        in: path
        required: true
        description: BEL Subject
        schema:
          type: string
      - name: relation
        in: path
        required: true
        description: BEL Relationship
        schema:
          type: string
      - name: object
        in: path
        required: true
        description: BEL Object
        schema:
          type: string
      - name: species_id
        in: path
        required: true
        description: |
          Orthologize BEL into Species ID. Species ID is either TAX:<integer>
          format from the NCBI Taxonomy namespace or using the
          common labels:
            * human
            * mouse
            * rat
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  orthologized:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /bel/{subject}/{relation}/{object}/edges:
    get:
      summary: BEL Edges
      description: |
        Create BEL Edges

        The call will create BEL Edges from the BEL triple which can
        be loaded into the edge store.
      tags:
      - TODO
      operationId: getBelEdges
      parameters:
      - name: subject
        in: path
        required: true
        description: BEL Subject
        schema:
          type: string
      - name: relation
        in: path
        required: true
        description: BEL Relationship
        schema:
          type: string
      - name: object
        in: path
        required: true
        description: BEL Object
        schema:
          type: string
      - name: computed_signatures
        in: query
        required: false
        description: |
          Default is to create all of the defined computed edges as
          specified in the BEL Language Specification file.

          You can specify which computed_signature steps will be performed
          by specifying a comma-delimited list of computed_signature
          keys. Example:

              computed_signatures=componentOf,degradation,activity
        schema:
          type: array
          items:
            type: string
        style: simple
      - name: ast
        in: query
        required: false
        description: |
          If AST is requested, the abstract syntax tree of the
          BEL Edges will be provided in the response.
        schema:
          type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        subject:
                          type: string
                        relation:
                          type: string
                        object:
                          type: string
                        ast:
                          type: object
                          description: |
                            If AST is requested (by query param), provide
                            the AST along with the Edge subject, relation, and
                            objects.
                          additionalProperties:
                            type: object
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'


  /belstmt/{stmt}/validate:
    get:
      # deprecated: true
      summary: Validate
      description: Validate BEL Statement
      tags:
      - TODO
      operationId: getBelStmtValidate
      parameters:
      - name: stmt
        in: path
        required: true
        description: BEL Statement
        schema:
          type: string
      - name: ast
        in: query
        required: false
        description: |
          If AST is requested, the abstract syntax tree of the
          BEL Edges will be provided in the response.
        schema:
          type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /belstmt/{stmt}/canonicalize:
    get:
      summary: Canonicalize
      description: Canonicalize BEL Statement
      tags:
      - TODO
      operationId: getBelStmtCanonicalize
      parameters:
      - name: stmt
        in: path
        required: true
        description: BEL Statement
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  canonicalized:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /belstmt/{stmt}/decanonicalize:
    get:
      summary: Decanonicalize
      description: Decanonicalize BEL Statement
      tags:
      - TODO
      operationId: getBelStmtDecanonicalize
      parameters:
      - name: stmt
        in: path
        required: true
        description: BEL Statement
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  decanonicalize:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /belstmt/{stmt}/orthologize/{species_id}:
    get:
      summary: Orthologize
      description: Orthologize BEL Statement
      tags:
      - TODO
      operationId: getBelStmtOrthologize
      parameters:
      - name: stmt
        in: path
        required: true
        description: BEL Statement
        schema:
          type: string
      - name: species_id
        in: path
        required: true
        description: |
          Orthologize BEL into Species ID. Species ID is either TAX:<integer>
          format from the NCBI Taxonomy namespace or using the
          common labels:
            * human
            * mouse
            * rat
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  orthologized:
                    type: object
                    properties:
                      subject:
                        type: string
                      relation:
                        type: string
                      object:
                        type: string
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /belstmt/{stmt}/edges:
    get:
      summary: BEL Statement Edges
      description: |
        Create BEL Edges

        The call will create BEL Edges from the BEL statement which can
        be loaded into the edge store.
      tags:
      - TODO
      operationId: getBelStmtEdges
      parameters:
      - name: stmt
        in: path
        required: true
        description: BEL Statement
        schema:
          type: string
      - name: computed_signatures
        in: query
        required: false
        description: |
          Default is to create all of the defined computed edges as
          specified in the BEL Language Specification file.

          You can specify which computed_signature steps will be performed
          by specifying a comma-delimited list of computed_signature
          keys. Example:

              computed_signatures=componentOf,degradation,activity
        schema:
          type: array
          items:
            type: string
        style: simple
      - name: ast
        in: query
        required: false
        description: |
          If AST is requested, the abstract syntax tree of the
          BEL Edges will be provided in the response.
        schema:
          type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
             schema:
                type: object
                properties:
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        subject:
                          type: string
                        relation:
                          type: string
                        object:
                          type: string
                        ast:
                          type: object
                          description: |
                            If AST is requested (by query param), provide
                            the AST along with the Edge subject, relation, and
                            objects.
                          additionalProperties:
                            type: object
                  messages:
                    type: array
                    items:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /terms:
    get:
      summary: Terms
      description: Not implemented - will eventually provide term search functionality
      tags:
      - Terminologies
      operationId: getTerms
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /terms/{term_id}:
    get:
      summary: Get Term record
      description: Get Term record, example term_id=HGNC:391
      tags:
      - Terminologies
      operationId: getTerm
      parameters:
      - name: term_id
        in: path
        required: true
        description: Term ID (or alternate Term ID)
        schema:
          type: string
      responses:
        '200':
          description: Successful response
            statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Term'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /terms/completions/{complete_term}:
    get:
      summary: Term Completion
      description: |
        Get term completion suggestions filtered by species_id, entity_types
        or context_types.  You may only use one filter at a time.
      tags:
      - Terminologies
      operationId: getTermCompletion
      parameters:
      - name: complete_term
        in: path
        required: true
        description: Partial term to complete, example completion 'AKT'
        schema:
          type: string
      - name: species_id
        required: false
        in: query
        description: |
          Species ID, will accept TAX:<integer>, human, mouse or rat

          Example query would be complete_term: AKT and species_id: TAX:9606 or human
        style: form
        schema:
          type: array
          items:
            type: string
      - name: entity_types
        required: false
        in: query
        description: |
          Entity Types will accept any of the values listed in the /term/types result.

          Example query would be complete_term: apop and entity_type: BiologicalProcess
        style: form
        schema:
          type: array
          items:
            type: string
      - name: context_types
        required: false
        in: query
        description: |
          Context Types will accept any of the values listed in the /term/types result.

          Example query would be complete_term: scler and entity_type: Disease
        style: form
        schema:
          type: array
          items:
            type: string
      - name: size
        required: false
        in: query
        description: Number of completions to return
        schema:
          type: string
          default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Completion'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /terms/{term_id}/equivalents:
    get:
      summary: Term Equivalents
      description: Get Term equivalents, example term_id=HGNC:AKT1
      tags:
      - Terminologies
      operationId: getTermEquivalents
      parameters:
      - name: term_id
        in: path
        required: true
        description: Term ID (or alternate Term ID)
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                example:
                  EG: EG:207
                  UP: UP:P31749
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /terms/{term_id}/canonicalized:
    get:
      summary: Term Canonicalization
      description: |
        Canonicalize the term into the standard namespaces used in the
        EdgeStore. This is to keep duplicate edges from being introduced
        when equivalent BEL Entities but in different namespaces are
        used.

        If a canonical term cannot be found, the query term_id will be
        returned.

        An example term_id to use is HGNC:AKT1 which will result in EG:207
        being returned.
      tags:
      - Terminologies
      operationId: getTermCanonicalized
      parameters:
      - name: term_id
        in: path
        required: true
        description: Term ID (or alternate Term ID)
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  term_id:
                    type: string
                example:
                  term_id: EG:207
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /terms/{term_id}/decanonicalized:
    get:
      summary: Term Decanonicalization
      description: |
        Decanonicalize the term into the human friendly namespaces.
        This is typically used when extracting a Term from an edge extracted
        from the EdgeStore.

        If a decanonical term cannot be found, the query term_id will be
        returned.

        An example term_id to use is EG:207 which will result in HGNC:AKT1
        being returned.
      tags:
      - Terminologies
      operationId: getTermDecanonicalized
      parameters:
      - name: term_id
        in: path
        required: true
        description: Term ID (or alternate Term ID)
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  term_id:
                    type: string
                example:
                  term_id: HGNC:AKT1
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /terms/types:
    get:
      summary: Term Types
      description: |
        Get:
          * term namespaces and associated term counts
          * entity_types and associated term counts
          * context_types and associated term counts
      tags:
      - Terminologies
      - Utility
      operationId: getTermTypes
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespaces:
                    type: object
                    additionalProperties:
                      type: integer
                  entity_types:
                    type: object
                    additionalProperties:
                      type: integer
                  context_types:
                    type: object
                    additionalProperties:
                      type: integer
                example:
                  namespaces:
                    EG: 19725818
                    TAX: 1645046
                    SP: 555594
                    CHEBI: 115240
                    MGI: 56177
                    GO: 44979
                    RGD: 44972
                    HGNC: 41254
                    MESH: 18187
                    DO: 8507
                  entity_types:
                    Gene: 20423815
                    RNA: 20372645
                    Protein: 17852293
                    Abundance: 124989
                    Micro_RNA: 4320
                    BiologicalProcess: 2029
                    Location: 237
                  context_types:
                    Species: 1294116
                    Disease: 4860
                    Anatomy: 1506
                    Cell: 351
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /orthologs/{gene_id}/{species_id}:
    get:
      summary: Ortholog
      description: |
        Get ortholog for given gene_id from species_id

        Example query gene_id=HGNC:A1BG  species_id: TAX:10090
        Result: SP:Q19LI2
      tags:
      - Terminologies
      operationId: getOrtholog
      parameters:
      - name: gene_id
        in: path
        required: true
        description: Gene or Protein ID
        schema:
          type: string
      - name: species_id
        in: path
        required: true
        description: Get ortholog from species_id for gene_id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ortholog:
                    type: string
                example:
                  ortholog: SP:Q19LI2
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /simple_status:
    get:
      summary: Simple Status
      description: Simple unauthenticated status check of API
      tags:
      - Utility
      security: []
      operationId: getSimpleStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Simple unauthenticated status API endpoint works
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /status:
    get:
      summary: Status (authenticated)
      description: Authenticated response with API settings and database content statistics
      tags:
      - Utility
      operationId: getStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /version:
    get:
      summary: Version
      description: Get version of API
      tags:
      - Utility
      security: []
      operationId: getVersion
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                example:
                  version: 0.1.0
components:
  schemas:

    Term:
      type: object
      properties:
        namespace:
          type: string
        src_id:
          type: string
        id:
          type: string
        alt_ids:
          type: array
          items:
            type: string
        label:
          type: string
        name:
          type: string
        species_id:
          type: string
        species_label:
          type: string
        description:
          type: string
        entity_types:
          type: array
          items:
            type: string
        context_types:
          type: array
          items:
            type: string
        equivalences:
          type: array
          items:
            type: string
        synonyms:
          type: array
          items:
            type: string
        children:
          type: array
          items:
            type: string
        obsolete_ids:
          type: array
          items:
            type: string
      example:
        namespace: HGNC
        src_id: '391'
        id: HGNC:AKT1
        alt_ids:
        - HGNC:391
        label: AKT1
        name: AKT serine/threonine kinase 1
        species_id: TAX:9606
        species_label: human
        description: ''
        entity_types:
        - Gene
        - RNA
        - Protein
        equivalences:
        - SP:P31749
        - EG:207
        synonyms:
        - RAC
        - PKB
        - PRKBA
        - AKT
        children: []
        obsolete_ids: []

    Completion:
      type: object
      properties:
        complete_term:
          type: string
        completions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Term ID with namespace prefix
              name:
                type: string
                description: official name of term
              label:
                type: string
                description: human friendly label for term
              description:
                type: string
              species:
                type: object
                properties:
                  id:
                    type: string
                  label:
                    type: string
              match:
                type: string
                description: |
                  ID or synonym with <em></em> tags wrapping the matched text.
      example:
        complete_term: AKT
        completions:
        - id: EG:64400
          name: AKT interacting protein
          label: AKTIP
          description: AKT interacting protein
          species:
            id: TAX:9606
            label: human
          match: <em>AKT<em> interacting protein
        - id: HGNC:AKTIP
          name: AKT interacting protein
          label: AKTIP
          description: ''
          species:
            id: TAX:9606
            label: human
          match: <em>AKT<em> interacting protein

    ErrorModel:
      type: object
      required:
      - title
      - message
      properties:
        title:
          type: string
        message:
          type: string
      example:
        title: Short descriptive title
        message: Longer error message with more details on what went wrong

  securitySchemes:
    JwtApiKey:
      description: |
        For accessing the API, a valid JWT token must be passed in the
        Authorization' header. The following syntax must be used for the value
        of the 'Authorization' header:\n  JWT xxxxxx.yyyyyyy.zzzzzz
      type: apiKey
      name: Authorization
      in: header

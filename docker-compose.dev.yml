version: "3.2"

volumes:
  dev_arangodb_data:
    driver: local
  dev_elasticsearch_data:
    driver: local
  dev_rabbitmq_data:
    driver: local

networks:
  belbio:
    external: true

services:

  # BEL API - core requirement
  # CELERY DOES NOT SUPPORT Python 3.7 yet - due to async keyword!!!!!!!!!!
  bb_belapi:
    container_name: bb_belapi
    image: belbio/bel_api:localdev
    build:
      context: ./belapi
      dockerfile: ./docker/Dockerfile-bel_api-dev
    environment:
      - CELERY_BROKER=amqp://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
      - CELERY_BACKEND=rpc://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
      - SERVER_MODE=${SERVER_MODE:?err}
      - BELBIO_CONF=${BELBIO_CONF:?err}
      - GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN}
      - ARANGO_USER=${ARANGO_USER}
      - ARANGO_PASSWD=${ARANGO_PASSWD}
      - JWT_SECRET=${JWT_SECRET:?err}
    depends_on:
      - bb_rabbitmq
      - bb_elasticsearch
      - bb_arangodb
    volumes:
      - ./belapi/api:/app
      # Add bel python package so it's editable
      - ./bel/bel:/usr/local/lib/python3.6/site-packages/bel
      # Add bel specifications folder for official and customer bel specs
      - ./bel_specifications:/belbio/bel_specifications
      - ./conf/belbio_conf.yml:/belbio/belbio_conf.yml
      - ./conf/belbio_secrets.yml:/belbio/belbio_secrets.yml
    networks:
      belbio:
    labels:
      - traefik.enable=true
      - traefik.backend=belapi
      - traefik.frontend.rule=Host:belapi.${SERVICES_HOST_NAME:?err};
      - traefik.port=8000
      - traefik.docker.network=biodati
    logging:
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "3"
    restart: unless-stopped


  # ArangoDB - document/graph store - core requirement
  # http://localhost:8529
  # Upgrading - run this first:  "docker-compose run --rm arangodb arangod --database.auto-upgrade"
  bb_arangodb:
    container_name: bb_arangodb
    image: arangodb:3.4
    command: --log.level info --log.level performance=info --log.level queries=info --log.level requests=warning
    ports:
      - "8529:8529"
    volumes:
      - dev_arangodb_data:/var/lib/arangodb3
    environment:
      - ARANGO_NO_AUTH=1
      # - ARANGO_ROOT_PASSWORD=${BS_ARANGO_PASSWD:?err}
    networks:
      belbio:
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "3"
    healthcheck:
      test: curl -f http://localhost:8529/_api/version || exit 1
    restart: unless-stopped

  # Elasticsearch 6.0
  bb_elasticsearch:
    container_name: bb_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    ports:
      - "9200:9200"
    volumes:
      - dev_elasticsearch_data:/usr/share/elasticsearch/data
      - ./conf/elasticsearch.yml:/conf/elasticsearch.yml
    networks:
      belbio:
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1g
    logging:
    #   driver: none
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "3"
    restart: unless-stopped

  bb_celery_worker:
    image: belbio/bel_api:localdev
    build:
      context: .
      dockerfile: ./belapi/docker/Dockerfile-bel_api-dev
    volumes:
      - ./belapi/api:/app
      # Add bel python package so it's editable
      - ./bel/bel:/usr/local/lib/python3.6/site-packages/bel
      # Add bel specifications folder for official and customer bel specs
      - ./bel_specifications:/belbio/bel_specifications
      - ./conf/belbio_conf.yml:/belbio/belbio_conf.yml
      - ./conf/belbio_secrets.yml:/belbio/belbio_secrets.yml
    command: celery -A services.tasks:celery_app worker --loglevel=info
    networks:
      belbio:
    environment:
      - SERVER_MODE=${SERVER_MODE:?err}
      - CELERY_BROKER=amqp://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
      - CELERY_BACKEND=rpc://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
      - BELBIO_CONF=${BELBIO_CONF:?err}
      - GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN}
    depends_on:
      - bb_belapi
      - bb_rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "3"
    restart: unless-stopped

  bb_flower:
    container_name: bb_flower
    image: belbio/bel_api:localdev
    build:
      context: .
      dockerfile: ./belapi/docker/Dockerfile-bel_api-dev
    environment:
      - SERVER_MODE=${SERVER_MODE:?err}
      - CELERY_BROKER=amqp://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
      - CELERY_BACKEND=rpc://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
      - BELBIO_CONF=${BELBIO_CONF:?err}
      - GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN}
    ports:
      - 5555:5555
    volumes:
      - ./belapi/api:/app
      # Add bel python package so it's editable
      - ./bel/bel:/usr/local/lib/python3.6/site-packages/bel
      # Add bel specifications folder for official and customer bel specs
      - ./bel_specifications:/belbio/bel_specifications
      - ./conf/belbio_conf.yml:/belbio/belbio_conf.yml
      - ./conf/belbio_secrets.yml:/belbio/belbio_secrets.yml
    command:  flower -A services.tasks:celery_app --port=5555 --broker=amqp://${RABBITMQ_USER:?err}:${RABBITMQ_PASSWD:?err}@rabbitmq:5672
    networks:
      belbio:
    labels:
      - traefik.enable=true
      - traefik.backend=flower
      - traefik.frontend.rule=Host:flower.${SERVICES_HOST_NAME:?err}
      - traefik.port=5555
      - traefik.docker.network=biodati
    depends_on:
      - bb_belapi
      - bb_rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "3"
    restart: unless-stopped

  # Used by celery for a message queue
  bb_rabbitmq:
    container_name: bb_rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.6-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:?err}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWD:?err}
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=.2  # Allow up to 20% of RAM
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error}]
    volumes:
      - dev_rabbitmq_data:/var/lib/rabbitmq
    networks:
      belbio:
    labels:
      - traefik.enable=true
      - traefik.backend=rabbitmq
      - traefik.frontend.rule=Host:rabbitmq.${SERVICES_HOST_NAME:?err}
      - traefik.port=15672
      - traefik.docker.network=biodati
    logging:
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "3"
    restart: unless-stopped

  bb_traefik:
    container_name: bb_traefik
    image: traefik:1.7.4
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/traefik.toml:/traefik.toml
      - ./logs:/logs
    networks:
      belbio:
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "3"
    # network_mode: "host"
    labels:
      - traefik.enable=true
      - traefik.backend=traefik
      - traefik.frontend.rule=Host:traefik.${SERVICES_HOST_NAME:?err}
      - traefik.port=8080
      - traefik.docker.network=biodati
    restart: "unless-stopped"
